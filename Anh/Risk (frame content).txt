There are different combinations of food that is usually eaten together would make a better meal, however there are also common combination of foods that have calcium and oxalic acid like chocolate milk, when the two additives combined and form insoluble calcium oxalate, which is not only indigestible but also can cause diarrhea. Another example is bean curd and spinach, when these ingredients are eaten together, they affect absorption of calcium and may lead to blockages in the abdomen which is very serious. This effect happens due to the fact that Spinach contains oxalic acid, which can react with the calcium in bean curd in the intestines and form insoluble precipitates of calcium oxalate. There are also articles about eating bean curd mixed with green onions over a long time, it can lead to a lack of calcium causing spasms, osteomalacia and fractures. Which is the risk that we have to face when we are building up the site, whether it is safe to combine these foods together or should the user eat this dish and another along it or not.

Another risk that we have to take into account is food poisoning — also called foodborne illness — caused by harmful germs, such as bacteria in contaminated food, as our project promotes the use of old food. In Vietnam, to practice food safety, people usually quickly refrigerate perishable foods, such as meat, poultry, fish, dairy and eggs, etc. The goal is to reduce the time a food is in the "danger zone" — between 40 and 140 F (4 and 60 C) — which is the time where bacteria can quickly multiply. Bacteria typically don't change the taste, smell or look of food, you can't tell whether a food is dangerous to eat. Many have said to put those items in a continuous heating source like a slow cooker. However, experts don't recommend slow cookers for reheating leftovers as these devices may not heat foods hot enough to kill bacteria. Fortunately, most cases of food poisoning can be prevented with proper cooking and food handling which is what we aim to provide for every user who is into the site. Not only helping everyone to preserve food but able to reuse and potentially send them to people in need.

Another problem that came up in mind for us, that is when we publish the site into the public, how would people be able to access the site, what hosting service will we be using, how is the site going to profit from the user to be able to maintain itself? How we as a small team be able to host our product and service on a website is a big problem, we will have to figure out how to monetize the site and we still want to keep the site access-able for everyone which generate two decisions whether we should take the freemium approach or ad-based. In one hand, it means that we are going to get more money to keep the site running, however this is scare of other customers as well since if we take that approach their will be some limited recipe that's going to be more common for people to find ingredients or dishes around to use and sometime people would just use the free recipe and not bother about paying at all which is another problem. On the other hand which is ad-based that give us a small amount every time an ad plays, that can help us get a small amount of financial support, which is ok and give us a consistent income to maintain the server, however people usually use ad-block nowadays and there are people who will get super skeptical when they see an ad and sometime just leave which is a very major problem that we will have to face. Which leads to how can we keep the site safe from attackers and also financial problems on maintaining a website for a long time.

One other risk is that web development is a particularly vast field with a steep learning curve. The basic knowledge such as HTML, CSS and javascript is considered to be rudimentary in this field, but those subjects alone are relatively "hard" for regular students. As we progressed in the project, we found out that tasks were getting significantly more challenging, especially in the database and security topics. One solution proposed is that we can hire professionals to do the work, but that also creates a new risk: human resources.

When the project reaches a state where developing features becomes harder and takes significantly more time when done by our team alone, we should think of hiring professional developers. But then we will have to determine the value of potential employees. It would be devastating when the developers we hire are not qualified for the job as they claimed to be. The entire project will then come to a halt due to the lack of money (wasted on hiring those developers when no values are generated).